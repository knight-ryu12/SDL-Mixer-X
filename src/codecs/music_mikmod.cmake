option(USE_MIKMOD          "Build with MikMod library" OFF)
if(USE_MIKMOD AND NOT SDL_MIXER_CLEAR_FOR_ZLIB_LICENSE)
    option(USE_MIKMOD_DYNAMIC "Use dynamical loading of MikMod" OFF)

    if(USE_SYSTEM_AUDIO_LIBRARIES)
        find_package(MikMod QUIET)
        message("MikMod: [${MikMod_FOUND}] ${MikMod_INCLUDE_DIRS} ${MikMod_LIBRARIES}")
        if(USE_MIKMOD_DYNAMIC)
            list(APPEND SDL_MIXER_DEFINITIONS -DMIKMOD_DYNAMIC=\"${MikMod_DYNAMIC_LIBRARY}\")
            message("Dynamic MikMod: ${MikMod_DYNAMIC_LIBRARY}")
        endif()
    else()
        if(DOWNLOAD_AUDIO_CODECS_DEPENDENCY)
            set(MikMod_LIBRARIES mikmod)
        else()
            find_library(MikMod_LIBRARIES NAMES mikmod
                         HINTS "${AUDIO_CODECS_INSTALL_PATH}/lib")
        endif()
        set(MikMod_FOUND 1)
        set(MikMod_INCLUDE_DIRS ${AUDIO_CODECS_PATH}/libmikmod/include)
    endif()

    if(MikMod_FOUND)
        message("== using MikMod (LGPLv2.1+) ==")
        if(NOT USE_MIKMOD_DYNAMIC)
            setLicense(LICENSE_LGPL_2_1p)
        endif()
        list(APPEND SDL_MIXER_DEFINITIONS -DMUSIC_MOD_MIKMOD)
        if(NOT USE_SYSTEM_AUDIO_LIBRARIES OR NOT USE_MikMod_DYNAMIC)
            list(APPEND SDLMixerX_LINK_LIBS ${MikMod_LIBRARIES})
        endif()
        list(APPEND SDL_MIXER_INCLUDE_PATHS ${MikMod_INCLUDE_DIRS})
        list(APPEND SDLMixerX_SOURCES
            ${CMAKE_CURRENT_LIST_DIR}/music_mikmod.c)
    else()
        message("-- skipping MikMod --")
    endif()
endif()
